#include <iostream>
#include <map>
#include <set>
#include <vector>
using namespace std;

void displaySets(const string& title, const map<char, set<string>>& sets) {
    cout << title << endl;
    for (const auto& pair : sets) {
        cout << pair.first << " = { ";
        for (auto it = pair.second.begin(); it != pair.second.end(); ++it) {
            if (it != pair.second.begin()) cout << ", ";
            cout << *it;
        }
        cout << " }" << endl;
    }
    cout << endl;
}

void displayParsingTable(const map<pair<char, char>, string>& table) {
    cout << "Predictive Parsing Table:" << endl;
    for (const auto& entry : table) {
        cout << "M[" << entry.first.first << ", " << entry.first.second << "] = " << entry.second << endl;
    }
}

int main() {
    map<char, set<string>> firstSets = {
        {'A', {"#", "a"}},
        {'B', {"b"}},
        {'S', {"#", "a"}}
    };

    map<char, set<string>> followSets = {
        {'A', {"b"}},
        {'B', {"$"}},
        {'S', {"$"}}
    };

    map<pair<char, char>, string> predictiveParsingTable = {
        {{'A', 'a'}, "a"},
        {{'A', 'b'}, "#"},
        {{'B', 'b'}, "b"},
        {{'S', 'a'}, "AB"},
        {{'S', '$'}, "AB"}
    };

    displaySets("FIRST sets:", firstSets);
    displaySets("FOLLOW sets:", followSets);
    displayParsingTable(predictiveParsingTable);
   
    return 0;
}
